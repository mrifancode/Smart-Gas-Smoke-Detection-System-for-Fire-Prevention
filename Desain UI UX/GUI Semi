from pathlib import Path
from tkinter import Tk, Canvas, Button, PhotoImage
import serial
import threading
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from collections import deque
import time

# Ganti port sesuai sistem kamu
ser = serial.serial_for_url('rfc2217://localhost:4000', baudrate=115200, timeout=1)

# Paths untuk gambar
OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"E:\gui\Tkinter-Designer-master\build\assets\frame0")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

window = Tk()
window.configure(bg="#0C505F")
window.attributes('-fullscreen', True)

canvas = Canvas(
    window,
    bg="#0C505F",
    height=1024,
    width=1440,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)

# Fungsi untuk center canvas di fullscreen
def center_canvas():
    screen_width = window.winfo_screenwidth()
    screen_height = window.winfo_screenheight()
    x_offset = (screen_width - 1440) // 2
    y_offset = (screen_height - 1024) // 2
    canvas.place(x=x_offset, y=y_offset)

window.after(100, center_canvas)

canvas.create_rectangle(753.0, 519.0, 1343.0, 991.0, fill="#D9D9D9", outline="")
canvas.create_rectangle(92.0, 519.0, 682.0, 991.0, fill="#D9D9D9", outline="")

# ================= BUTTONS DAN GAMBAR ==================
button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
button_1 = Button(image=button_image_1, borderwidth=0, highlightthickness=0, command=lambda: print("button_1 clicked"), relief="flat")
button_1.place(x=1162.0, y=212.0, width=315.0, height=38.0)

button_image_2 = PhotoImage(file=relative_to_assets("button_2.png"))
button_2 = Button(image=button_image_2, borderwidth=0, highlightthickness=0, command=lambda: print("button_2 clicked"), relief="flat")
button_2.place(x=847.0, y=212.0, width=206.0, height=38.0)

button_image_3 = PhotoImage(file=relative_to_assets("button_3.png"))
button_3 = Button(image=button_image_3, borderwidth=0, highlightthickness=0, command=lambda: print("button_3 clicked"), relief="flat")
button_3.place(x=524.0, y=212.0, width=195.0, height=38.0)

# ================ GAMBAR =====================
image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
canvas.create_image(883.0, 365.0, image=image_image_1)

image_image_2 = PhotoImage(file=relative_to_assets("image_2.png"))
canvas.create_image(1213.0, 365.0, image=image_image_2)

image_image_3 = PhotoImage(file=relative_to_assets("image_3.png"))
canvas.create_image(222.0, 365.0, image=image_image_3)

image_image_4 = PhotoImage(file=relative_to_assets("image_4.png"))
canvas.create_image(552.0, 364.0, image=image_image_4)

image_image_5 = PhotoImage(file=relative_to_assets("image_5.png"))
canvas.create_image(720.0, 90.0, image=image_image_5)

image_image_6 = PhotoImage(file=relative_to_assets("image_6.png"))
canvas.create_image(221.0, 321.0, image=image_image_6)

canvas.create_text(198.0, 53.0, anchor="nw", text="SMART GAS & \nSMOKE DETECTOR", fill="#FCE5B2", font=("Inter SemiBold", 32 * -1))

image_image_7 = PhotoImage(file=relative_to_assets("image_7.png"))
canvas.create_image(156.0, 97.0, image=image_image_7)

image_image_8 = PhotoImage(file=relative_to_assets("image_8.png"))
canvas.create_image(156.0, 72.0, image=image_image_8)

image_image_9 = PhotoImage(file=relative_to_assets("image_9.png"))
canvas.create_image(552.0, 320.0, image=image_image_9)

image_image_10 = PhotoImage(file=relative_to_assets("image_10.png"))
canvas.create_image(882.0, 333.0, image=image_image_10)

image_image_11 = PhotoImage(file=relative_to_assets("image_11.png"))
canvas.create_image(1212.0, 338.0, image=image_image_11)

image_image_12 = PhotoImage(file=relative_to_assets("image_12.png"))
canvas.create_image(1309.0, 88.0, image=image_image_12)

# ================== TEXT YANG DIUPDATE ==================
gas_text = canvas.create_text(222.0, 415.0, anchor="center", text="Gas Status\n   Normal\n   0 PPm", fill="#FCE5B2", font=("Inter Bold", 24 * -1))
smoke_text = canvas.create_text(470.0, 377.0, anchor="nw", text="Smoke Status\n     Normal\n     0 PPm", fill="#FCE5B2", font=("Inter Bold", 24 * -1))
shower_text = canvas.create_text(800.0, 392.0, anchor="nw", text="        OFF\n Water Shower", fill="#FCE5B2", font=("Inter Bold", 24 * -1))
fan_text = canvas.create_text(1141.0, 392.0, anchor="nw", text="       OFF\n Exhaust Fan", fill="#FCE5B2", font=("Inter Bold", 24 * -1))

# ================== GRAFIK ==================
gas_data = deque(maxlen=50)
smoke_data = deque(maxlen=50)
time_data = deque(maxlen=50)

fig1, ax1 = plt.subplots(figsize=(5.5, 4.3), dpi=100)
fig2, ax2 = plt.subplots(figsize=(5.5, 4.3), dpi=100)

canvas_gas = FigureCanvasTkAgg(fig1, master=window)
canvas_gas.get_tk_widget().place(x=355, y=570)

canvas_smoke = FigureCanvasTkAgg(fig2, master=window)
canvas_smoke.get_tk_widget().place(x=1015, y=570)

def init_graphs():
    ax1.set_title("Gas PPM")
    ax1.set_xlabel("Time")
    ax1.set_ylabel("PPM")
    ax1.grid(True)

    ax2.set_title("Smoke PPM")
    ax2.set_xlabel("Time")
    ax2.set_ylabel("PPM")
    ax2.grid(True)

init_graphs()

def update_graphs():
    ax1.clear()
    ax2.clear()
    init_graphs()

    ax1.plot(time_data, gas_data, color='blue', label="Gas")
    ax2.plot(time_data, smoke_data, color='red', label="Smoke")

    canvas_gas.draw()
    canvas_smoke.draw()

# ================== BACA SERIAL ==================
def read_serial():
    while True:
        try:
            line = ser.readline().decode('utf-8').strip()
            print(line)

            now = time.time()

            if line.startswith("GAS:"):
                gas_val = int(line.split(":")[1].strip())
                canvas.itemconfig(gas_text, text=f"Gas Status\n   Normal\n {gas_val} PPm")
                gas_data.append(gas_val)
                time_data.append(now)

            elif line.startswith("SMOKE:"):
                smoke_val = int(line.split(":")[1].strip())
                canvas.itemconfig(smoke_text, text=f"Smoke Status\n     Normal\n {smoke_val} PPm")
                smoke_data.append(smoke_val)

            elif "Aktifkan FAN" in line:
                canvas.itemconfig(fan_text, text="        ON\n Exhaust Fan")

            elif "Matikan FAN" in line:
                canvas.itemconfig(fan_text, text="        OFF\n Exhaust Fan")

            elif "Aktifkan WATER SHOWER" in line:
                canvas.itemconfig(shower_text, text="        ON\n Water Shower")

            elif "Matikan WATER SHOWER" in line:
                canvas.itemconfig(shower_text, text="        OFF\n Water Shower")

            update_graphs()

        except Exception as e:
            print("Serial Error:", e)

# ================== THREADING ==================
serial_thread = threading.Thread(target=read_serial, daemon=True)
serial_thread.start()

# ================== ESC TO EXIT ==================
def on_escape(event):
    window.destroy()

window.bind("<Escape>", on_escape)
window.resizable(False, False)
window.mainloop()
