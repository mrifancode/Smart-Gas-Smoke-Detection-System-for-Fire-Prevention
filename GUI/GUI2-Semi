from pathlib import Path
from tkinter import Tk, Canvas, Text, Button, PhotoImage
import subprocess
import serial
import threading

def back_to_dashboard():
    try:
        if ser:
            ser.close()  # Tutup port serial sebelum balik ke dashboard
    except:
        pass
    window.destroy()
    subprocess.Popen(["python", "gui1.py"])

def open_emergency():
    try:
        if ser:
            ser.close()  # Tutup port serial sebelum balik ke dashboard
    except:
        pass
    window.destroy()
    subprocess.Popen(["python", "gui3.py"])


# ========== PATH ASET ========== 
OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"E:\gui\Projek\assets\frame0\LOG")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

# ========== INISIALISASI WINDOW ========== 
window = Tk()
window.attributes('-fullscreen', True)  # Membuat jendela fullscreen
window.configure(bg="#0C505F")

canvas = Canvas(
    window,
    bg="#0C505F",
    height=1024, 
    width=1440,    
    bd=0,
    highlightthickness=0,
    relief="ridge"
)
# Fungsi untuk center canvas di fullscreen
def center_canvas():
    screen_width = window.winfo_screenwidth()
    screen_height = window.winfo_screenheight()
    x_offset = (screen_width - 1440) // 2
    y_offset = (screen_height - 1024) // 2
    canvas.place(x=x_offset, y=y_offset)

window.after(100, center_canvas)


# ========== BUTTON & IMAGE ========== 
# ================= BUTTONS DAN GAMBAR ==================
button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
button_1 = Button(image=button_image_1, borderwidth=0, highlightthickness=0, command=open_emergency, relief="flat")
button_1.place(x=1162.0, y=212.0, width=250.0, height=38.0)

button_image_2 = PhotoImage(file=relative_to_assets("button_2.png"))
button_2 = Button(image=button_image_2, borderwidth=0, highlightthickness=0, command=lambda: print("button_2 clicked"), relief="flat")
button_2.place(x=847.0, y=212.0, width=206.0, height=38.0)

button_image_3 = PhotoImage(file=relative_to_assets("button_3.png"))
button_3 = Button(image=button_image_3, borderwidth=0, highlightthickness=0, command=back_to_dashboard, relief="flat")
button_3.place(x=524.0, y=212.0, width=195.0, height=38.0)

# ================ GAMBAR =====================
image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
canvas.create_image(720.0, 90.0, image=image_image_1)

canvas.create_text(198.0, 53.0, anchor="nw", text="SMART GAS & \nSMOKE DETECTOR", fill="#FCE5B2", font=("Inter SemiBold", 32 * -1))

image_image_2 = PhotoImage(file=relative_to_assets("image_2.png"))
canvas.create_image(156.0, 97.0, image=image_image_2)

image_image_3 = PhotoImage(file=relative_to_assets("image_3.png"))
canvas.create_image(156.0, 72.0, image=image_image_3)

image_image_4 = PhotoImage(file=relative_to_assets("image_4.png"))
canvas.create_image(1309.0, 88.0, image=image_image_4)

canvas.create_text(
    581.0,
    261.0,
    anchor="nw",
    text="LOG HISTORY",
    fill="#FCE5B2",
    font=("Inter ExtraBoldItalic", 40 * -1)
)

canvas.create_rectangle(
    138.0,
    314.0,
    1342.0,
    932.0,
    fill="#D9D9D9",
    outline="")




# ========== TEXTBOX LOG ========== 
log_textbox = Text(
    window,
    bg="#FFFFFF",
    fg="#000000",
    font=("Courier", 12),
    wrap="word"
)
log_textbox.place(
    x=415,
    y=355,
    width=window.winfo_screenwidth() - 800,  # Sesuaikan dengan lebar layar
    height=window.winfo_screenheight() - 500  # Sesuaikan dengan tinggi layar
)

# ========== BACA SERIAL UART ========== 
# Ganti COM3 ke port mikrokontroler kamu (misalnya COM4, /dev/ttyUSB0, dll)
try:
   ser = serial.Serial('COM15', 9600)
except serial.SerialException:
    log_textbox.insert("end", "Gagal membuka port serial. Periksa koneksi!\n")
    ser = None

def read_serial():
    if not ser:
        return
    while True:
        if ser.in_waiting > 0:
            line = ser.readline().decode('utf-8', errors='ignore')
            log_textbox.insert("end", line)
            log_textbox.see("end")  # Scroll otomatis ke bawah

serial_thread = threading.Thread(target=read_serial, daemon=True)
serial_thread.start()

# ========== KELUAR DENGAN TOMBOL ESC ========== 
window.bind("<Escape>", lambda e: window.quit())  # Menutup aplikasi saat ESC ditekan

window.resizable(False, False)
window.mainloop()
